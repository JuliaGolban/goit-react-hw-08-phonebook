{"version":3,"file":"static/js/549.9cf68e7b.chunk.js","mappings":"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","sources":["components/base/Form.styled.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","redux/phonebook/selectors.js","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts.jsx","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n\n  background-color: transparent;\n`;\n\nconst Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.span`\n  margin-bottom: 4px;\n\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  color: rgb(42 42 42);\n`;\n\nconst Input = styled.input`\n  width: calc(100vw - 40px);\n  padding: 10px 15px;\n\n  font-size: 12px;\n  font-weight: 500;\n  color: rgb(42 42 42);\n\n  background-color: rgb(255 255 255 / 70%);\n  border-radius: 5px;\n  border: 2px solid rgba(128, 128, 128, 0.7);\n  box-shadow: 3px 5px 10px -2px rgba(75, 92, 165, 0.5);\n\n  @media screen and (min-width: 320px) {\n    max-width: 300px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: 0;\n    border: 2px solid rgb(128, 128, 128);\n    box-shadow: 1px -1px 10px -2px rgba(75, 92, 165, 0.5) inset;\n  }\n`;\n\nconst Submit = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 8px 10px;\n\n  font-size: 10px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: rgb(42 42 42);\n\n  background-color: rgba(9, 9, 121, 0.3);\n  border-radius: 5px;\n  border: none;\n  /* border: 1px solid rgba(128, 128, 128, 0.7); */\n  box-shadow: 5px 5px 5px -2px rgba(75, 92, 165, 0.3);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: rgba(160, 141, 196, 0.5);\n    border: none;\n    /* border: 1px solid rgba(128, 128, 128); */\n    box-shadow: 1px -1px 10px -2px rgba(75, 92, 165, 0.3) inset;\n  }\n`;\n\nexport { Form, Field, Label, Input, Submit };\n","import styled from 'styled-components';\nimport { Form, Field, Label, Input, Submit } from '../base/Form.styled';\n\nconst ContactsForm = styled(Form)``;\nconst ContactsField = styled(Field)``;\nconst ContactsLabel = styled(Label)``;\nconst ContactsInput = styled(Input)``;\nconst ContactsSubmit = styled(Submit)``;\n\nexport {\n  ContactsForm,\n  ContactsField,\n  ContactsLabel,\n  ContactsInput,\n  ContactsSubmit,\n};\n","import toast from 'react-hot-toast';\n// import { useDispatch } from 'react-redux';\n// import { useContacts } from 'hooks/useContacts';\n// import { addContact } from 'redux/phonebook/operations';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/phonebook/operations';\nimport {\n  ContactsForm,\n  ContactsField,\n  ContactsLabel,\n  ContactsInput,\n  ContactsSubmit,\n} from './ContactsForm.styled';\n\nexport const ContactForm = () => {\n  // const { contacts } = useContacts();\n  // const dispatch = useDispatch();\n  const { data: contacts = [] } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const form = e.target;\n\n      const name = form.elements.name;\n      const number = form.elements.number;\n\n      const newContact = {\n        name: name.value,\n        number: number.value,\n      };\n\n      // check the new contact for an existing duplicate\n      const normalizedName = name.value.toLowerCase();\n      const isExist = contacts.some(\n        ({ name }) => name.toLowerCase() === normalizedName\n      );\n      if (isExist) {\n        return toast(t => (\n          <span>\n            <b>{name.value}</b> is already in contacts &nbsp;\n            <button\n              onClick={() => {\n                form.reset();\n                toast.dismiss(t.id);\n              }}\n            >\n              Reset\n            </button>\n          </span>\n        ));\n      }\n\n      // add the new contact to phonebook and reset form\n\n      // dispatch(addContact(newContact));\n      await addContact(newContact).unwrap();\n\n      form.reset();\n    } catch (error) {\n      toast.error(`${error.message}`);\n      console.log(error);\n    }\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <ContactsField>\n        <ContactsLabel>Name</ContactsLabel>\n        <ContactsInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name...\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactsField>\n      <ContactsField>\n        <ContactsLabel>Number</ContactsLabel>\n        <ContactsInput\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number...\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactsField>\n      <ContactsSubmit type=\"submit\" disabled={isLoading}>\n        Add contact\n      </ContactsSubmit>\n    </ContactsForm>\n  );\n};\n","import styled from 'styled-components';\n\nconst Item = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  align-content: center;\n\n  color: rgb(42 42 42);\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nconst Name = styled.span`\n  margin-right: auto;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst Number = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nconst DeleteIconBtn = styled.button`\n  display: inline-flex;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n\n  color: rgb(42 42 42);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: red;\n  }\n\n  & > svg {\n    fill: currentColor;\n  }\n`;\n\nexport { Item, Name, Number, DeleteIconBtn };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\nimport { MdPerson, MdClose } from 'react-icons/md';\n// import { deleteContact } from 'redux/phonebook/operations';\nimport { useDeleteContactMutation } from 'redux/phonebook/operations';\nimport { Item, Name, Number, DeleteIconBtn } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  // const dispatch = useDispatch();\n  // const handleDelete = () => dispatch(deleteContact(id));\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <Item key={id}>\n      <MdPerson size={15} />\n      <Name>{name}</Name>\n      <Number>{number}</Number>\n      <DeleteIconBtn\n        aria-label=\"Delete contact\"\n        onClick={() => deleteContact(id).unwrap()}\n        disabled={isDeleting}\n      >\n        <MdClose size={10} />\n      </DeleteIconBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  width: calc(100vw - 40px);\n  @media screen and (min-width: 320px) {\n    max-width: 300px;\n  }\n`;\n\nconst Notify = styled.p`\n  margin-bottom: 15px;\n  font-weight: 500;\n`;\nexport { List, Notify };\n","// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { useContacts } from 'hooks/useContacts';\n// import { fetchContacts } from 'redux/phonebook/operations';\nimport { useGetContactsQuery } from 'redux/phonebook/operations';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List, Notify } from './ContactsList.styled';\n\nexport const ContactList = () => {\n  // const { contacts, isLoading, error } = useContacts();\n  const { data: contacts = [], isLoading, error } = useGetContactsQuery();\n  console.log('ContactList ~ useFetchContactsQuery', useGetContactsQuery());\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <List>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n\n      {isLoading && !error && <Notify>Loading contacts...</Notify>}\n      {error && <Notify>{error}</Notify>}\n\n      {contacts.length === 0 && !error && !isLoading && (\n        <Notify>No contacts</Notify>\n      )}\n    </List>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { Field, Label, Input } from '../base/Form.styled';\n\nconst FieldFilter = styled(Field)``;\nconst LabelFilter = styled(Label)``;\nconst InputFilter = styled(Input)``;\n\nexport { FieldFilter, LabelFilter, InputFilter };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/phonebook/selectors';\nimport { filterContacts } from 'redux/phonebook/filterSlice';\nimport { FieldFilter, LabelFilter, InputFilter } from './ContactsFilter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = e => dispatch(filterContacts(e.target.value));\n\n  const filter = useSelector(selectFilter);\n  return (\n    <FieldFilter>\n      <LabelFilter>Find contacts by name</LabelFilter>\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        title=\"Name may contain only letters\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </FieldFilter>\n  );\n};\n","import { ContactForm } from '../components/ContactsForm/ContactsForm';\nimport { ContactList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/ContactsFilter/ContactsFilter';\nimport {\n  Container,\n  Section,\n  Title,\n} from '../components/base/CommonStyle.styled';\nimport { SEO } from 'utils/SEO';\n\nconst Contacts = () => {\n  return (\n    <main>\n      <SEO title=\"Contacts\" description=\"You can create your contacts list\" />\n      <Container>\n        <Section>\n          <Title as=\"h1\" hidden>\n            Phonebook\n          </Title>\n          <Title as=\"h2\">New contact</Title>\n          <ContactForm />\n        </Section>\n        <Section>\n          <Title as=\"h2\">Contacts</Title>\n          <Filter />\n          <ContactList />\n        </Section>\n      </Container>\n    </main>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["Form","styled","Field","Label","Input","Submit","ContactsForm","ContactsField","ContactsLabel","ContactsInput","ContactsSubmit","ContactForm","useGetContactsQuery","data","contacts","useAddContactMutation","addContact","isLoading","handleSubmit","e","preventDefault","form","target","name","elements","number","newContact","value","normalizedName","toLowerCase","some","toast","t","onClick","reset","id","unwrap","message","console","log","onSubmit","type","placeholder","pattern","title","required","disabled","Item","Name","Number","DeleteIconBtn","ContactItem","useDeleteContactMutation","deleteContact","isDeleting","size","List","Notify","ContactList","error","length","map","selectFilter","state","filter","createSelector","items","includes","FieldFilter","LabelFilter","InputFilter","Filter","dispatch","useDispatch","useSelector","onChange","filterContacts","SEO","description","as","hidden","content"],"sourceRoot":""}