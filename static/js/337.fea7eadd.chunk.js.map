{"version":3,"file":"static/js/337.fea7eadd.chunk.js","mappings":"+SAEMA,EAAOC,EAAAA,GAAAA,KAAH,iKASJC,EAAQD,EAAAA,GAAAA,MAAH,yHAOLE,EAAQF,EAAAA,GAAAA,KAAH,oKAULG,EAAQH,EAAAA,GAAAA,MAAH,kjBA0BLI,EAASJ,EAAAA,GAAAA,OAAH,kmB,kIClDCK,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAV,EAEpBC,GAAwBC,EAAAA,EAAAA,IACnC,CAL4B,SAAAH,GAAK,OAAIA,EAAMI,SAASC,KAAnB,EAKhBN,IACjB,SAACK,EAAUH,GACT,OAAOG,EAASH,QAAO,qBAAGK,KAAgBC,cAAcC,SAASP,EAA1C,GACxB,IAGUQ,EAAkB,SAAAT,GAAK,OAAIA,EAAMI,SAASM,SAAnB,EACvBC,EAAc,SAAAX,GAAK,OAAIA,EAAMI,SAASQ,KAAnB,ECPnBC,EAAc,WAKzB,MAAO,CACLT,UALeU,EAAAA,EAAAA,IAAYZ,GAM3BQ,WALgBI,EAAAA,EAAAA,IAAYL,GAM5BG,OALYE,EAAAA,EAAAA,IAAYH,GAO3B,E,uCCdKI,GAAerB,EAAAA,EAAAA,IAAOD,EAAAA,GAAPC,CAAH,sBACZsB,GAAgBtB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sBACbuB,GAAgBvB,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,sBACbwB,GAAgBxB,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sBACbyB,GAAiBzB,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sB,UCKP0B,EAAc,WACzB,IAAQhB,EAAaS,IAAbT,SAEFiB,GAAWC,EAAAA,EAAAA,MAuCjB,OACE,UAACP,EAAD,CAAcQ,SAtCK,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAETrB,EAAOoB,EAAKE,SAAStB,KACrBuB,EAASH,EAAKE,SAASC,OAEvBC,EAAa,CACjBxB,KAAMA,EAAKyB,MACXF,OAAQA,EAAOE,OAGXC,EAAiB1B,EAAKyB,MAAMxB,cAIlC,GAHgBH,EAAS6B,MACvB,qBAAG3B,KAAgBC,gBAAkByB,CAArC,IAIA,OAAOE,EAAAA,EAAAA,KAAM,SAAAC,GAAC,OACZ,6BACE,uBAAI7B,EAAKyB,QADX,gCAEE,mBACEK,QAAS,WACPV,EAAKW,QACLH,EAAAA,GAAAA,QAAcC,EAAEG,GACjB,EAJH,qBAHU,IAehBjB,GAASkB,EAAAA,EAAAA,IAAWT,IACpBJ,EAAKW,OACN,EAGC,WACE,UAACrB,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,CACEsB,KAAK,OACLlC,KAAK,OACLmC,YAAY,gBACZC,QAAQ,0GACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAC5B,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,CACEsB,KAAK,MACLlC,KAAK,SACLmC,YAAY,wBACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACzB,EAAD,CAAgBqB,KAAK,SAArB,2BAGL,E,oBC/EKK,EAAOnD,EAAAA,GAAAA,GAAH,8LAaJoD,EAAOpD,EAAAA,GAAAA,KAAH,wFAMJqD,EAASrD,EAAAA,GAAAA,KAAH,iEAKNsD,EAAgBtD,EAAAA,GAAAA,OAAH,oZCnBNuD,EAAc,SAAC,GAA0B,IAAxBX,EAAuB,EAAvBA,GAAIhC,EAAmB,EAAnBA,KAAMuB,EAAa,EAAbA,OAChCR,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAACuB,EAAD,YACE,SAAC,MAAD,CAAUK,KAAM,MAChB,SAACJ,EAAD,UAAOxC,KACP,SAAC,EAAD,UAASuB,KACT,SAACmB,EAAD,CAAe,aAAW,iBAAiBZ,QAP1B,kBAAMf,GAAS8B,EAAAA,EAAAA,IAAcb,GAA7B,EAOjB,UACE,SAAC,MAAD,CAASY,KAAM,SALRZ,EASd,ECnBKc,EAAO1D,EAAAA,GAAAA,GAAH,yCAIJ2D,EAAS3D,EAAAA,GAAAA,EAAH,qECCC4D,EAAc,WACzB,MAAuCzC,IAA/BT,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,UAAWE,EAA7B,EAA6BA,MAEvBS,GAAWC,EAAAA,EAAAA,MAMjB,OAJAiC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAGF,UAAC+B,EAAD,WACGhD,EAASqD,OAAS,GACjBrD,EAASsD,KAAI,gBAAGpB,EAAH,EAAGA,GAAIhC,EAAP,EAAOA,KAAMuB,EAAb,EAAaA,OAAb,OACX,SAACoB,EAAD,CAAsBX,GAAIA,EAAIhC,KAAMA,EAAMuB,OAAQA,GAAhCS,EADP,IAId5B,IAAcE,IAAS,SAACyC,EAAD,kCACvBzC,IAAS,SAACyC,EAAD,UAASzC,IAEE,IAApBR,EAASqD,SAAiB7C,IAAUF,IACnC,SAAC2C,EAAD,4BAIP,E,UC5BKM,GAAcjE,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sBAEXkE,GAAclE,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4CAIXmE,GAAcnE,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+DCHJoE,EAAS,WACpB,IAAMzC,GAAWC,EAAAA,EAAAA,MAGXrB,GAASa,EAAAA,EAAAA,IAAYf,GAC3B,OACE,UAAC4D,EAAD,YACE,SAACC,EAAD,qCACA,SAACC,EAAD,CACErB,KAAK,OACLlC,KAAK,SACLqC,MAAM,gCACNZ,MAAO9B,EACP8D,SAXqB,SAAAvC,GAAC,OAAIH,GAAS2C,EAAAA,EAAAA,IAAexC,EAAEG,OAAOI,OAArC,MAe7B,E,UCSD,EAvBiB,WACf,OACE,6BACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOkC,GAAG,KAAKC,QAAM,EAArB,wBAGA,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,GAAG,KAAV,0BACA,SAAC7C,EAAD,WAGJ,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAO6C,GAAG,KAAV,uBACA,SAACH,EAAD,KACA,SAACR,EAAD,WAKT,C","sources":["components/base/Form.styled.js","redux/contacts/selectors.js","hooks/useContacts.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n\n  background-color: transparent;\n`;\n\nconst Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.span`\n  margin-bottom: 4px;\n\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  color: rgb(42 42 42);\n`;\n\nconst Input = styled.input`\n  width: calc(100vw - 40px);\n  padding: 10px 15px;\n\n  font-size: 12px;\n  font-weight: 500;\n  color: rgb(42 42 42);\n\n  background-color: rgb(255 255 255 / 70%);\n  border-radius: 5px;\n  border: 2px solid rgba(128, 128, 128, 0.7);\n  box-shadow: 3px 5px 10px -2px rgba(75, 92, 165, 0.5);\n\n  @media screen and (min-width: 320px) {\n    max-width: 300px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: 0;\n    border: 2px solid rgb(128, 128, 128);\n    box-shadow: 1px -1px 10px -2px rgba(75, 92, 165, 0.5) inset;\n  }\n`;\n\nconst Submit = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 8px 10px;\n\n  font-size: 10px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: rgb(42 42 42);\n\n  background-color: rgba(160, 141, 196, 0.5);\n  border-radius: 5px;\n  border: 1px solid rgba(128, 128, 128, 0.7);\n  box-shadow: 5px 5px 5px -2px rgba(75, 92, 165, 0.3);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: rgba(9, 9, 121, 0.3);\n    border: 1px solid rgba(128, 128, 128);\n    box-shadow: 1px -1px 10px -2px rgba(75, 92, 165, 0.3) inset;\n  }\n`;\n\nexport { Form, Field, Label, Input, Submit };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return {\n    contacts,\n    isLoading,\n    error,\n  };\n};\n","import styled from 'styled-components';\nimport { Form, Field, Label, Input, Submit } from '../base/Form.styled';\n\nconst ContactsForm = styled(Form)``;\nconst ContactsField = styled(Field)``;\nconst ContactsLabel = styled(Label)``;\nconst ContactsInput = styled(Input)``;\nconst ContactsSubmit = styled(Submit)``;\n\nexport {\n  ContactsForm,\n  ContactsField,\n  ContactsLabel,\n  ContactsInput,\n  ContactsSubmit,\n};\n","import toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from 'hooks/useContacts';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  ContactsForm,\n  ContactsField,\n  ContactsLabel,\n  ContactsInput,\n  ContactsSubmit,\n} from './ContactsForm.styled';\n\nexport const ContactForm = () => {\n  const { contacts } = useContacts();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const name = form.elements.name;\n    const number = form.elements.number;\n\n    const newContact = {\n      name: name.value,\n      number: number.value,\n    };\n\n    const normalizedName = name.value.toLowerCase();\n    const isExist = contacts.some(\n      ({ name }) => name.toLowerCase() === normalizedName\n    );\n    if (isExist) {\n      // return alert(`${name.value} is already in contacts`);\n      return toast(t => (\n        <span>\n          <b>{name.value}</b> is already in contacts &nbsp;\n          <button\n            onClick={() => {\n              form.reset();\n              toast.dismiss(t.id);\n            }}\n          >\n            Reset\n          </button>\n        </span>\n      ));\n    }\n\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <ContactsField>\n        <ContactsLabel>Name</ContactsLabel>\n        <ContactsInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name...\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactsField>\n      <ContactsField>\n        <ContactsLabel>Number</ContactsLabel>\n        <ContactsInput\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number...\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactsField>\n      <ContactsSubmit type=\"submit\">Add contact</ContactsSubmit>\n    </ContactsForm>\n  );\n};\n","import styled from 'styled-components';\n\nconst Item = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  align-content: center;\n\n  color: rgb(42 42 42);\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nconst Name = styled.span`\n  margin-right: auto;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst Number = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nconst DeleteIconBtn = styled.button`\n  display: inline-flex;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n\n  color: rgb(42 42 42);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: red;\n  }\n\n  & > svg {\n    fill: currentColor;\n  }\n`;\n\nexport { Item, Name, Number, DeleteIconBtn };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { MdPerson, MdClose } from 'react-icons/md';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Item, Name, Number, DeleteIconBtn } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item key={id}>\n      <MdPerson size={15} />\n      <Name>{name}</Name>\n      <Number>{number}</Number>\n      <DeleteIconBtn aria-label=\"Delete contact\" onClick={handleDelete}>\n        <MdClose size={10} />\n      </DeleteIconBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  width: 300px;\n`;\n\nconst Notify = styled.p`\n  margin-bottom: 15px;\n  font-weight: 500;\n`;\nexport { List, Notify };\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from 'hooks/useContacts';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List, Notify } from './ContactsList.styled';\n\nexport const ContactList = () => {\n  const { contacts, isLoading, error } = useContacts();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n\n      {isLoading && !error && <Notify>Loading contacts...</Notify>}\n      {error && <Notify>{error}</Notify>}\n\n      {contacts.length === 0 && !error && !isLoading && (\n        <Notify>No contacts</Notify>\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Label, Input } from '../base/Form.styled';\n\nconst FieldFilter = styled(Field)``;\n\nconst LabelFilter = styled(Label)`\n  font-size: 12px;\n`;\n\nconst InputFilter = styled(Input)`\n  width: 250px;\n  padding: 5px 10px;\n`;\n\nexport { FieldFilter, LabelFilter, InputFilter };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { FieldFilter, LabelFilter, InputFilter } from './ContactsFilter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = e => dispatch(filterContacts(e.target.value));\n\n  const filter = useSelector(selectFilter);\n  return (\n    <FieldFilter>\n      <LabelFilter>Find contacts by name</LabelFilter>\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        title=\"Name may contain only letters\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </FieldFilter>\n  );\n};\n","import { ContactForm } from '../components/ContactsForm/ContactsForm';\nimport { ContactList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/ContactsFilter/ContactsFilter';\nimport {\n  Container,\n  Section,\n  Title,\n} from '../components/base/CommonStyle.styled';\n\nconst Contacts = () => {\n  return (\n    <main>\n      <Section>\n        <Title as=\"h1\" hidden>\n          Phonebook\n        </Title>\n        <Container>\n          <Title as=\"h2\">New contact</Title>\n          <ContactForm />\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          <Title as=\"h2\">Contacts</Title>\n          <Filter />\n          <ContactList />\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","Field","Label","Input","Submit","selectFilter","state","filter","selectVisibleContacts","createSelector","contacts","items","name","toLowerCase","includes","selectIsLoading","isLoading","selectError","error","useContacts","useSelector","ContactsForm","ContactsField","ContactsLabel","ContactsInput","ContactsSubmit","ContactForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","elements","number","newContact","value","normalizedName","some","toast","t","onClick","reset","id","addContact","type","placeholder","pattern","title","required","Item","Name","Number","DeleteIconBtn","ContactItem","size","deleteContact","List","Notify","ContactList","useEffect","fetchContacts","length","map","FieldFilter","LabelFilter","InputFilter","Filter","onChange","filterContacts","as","hidden"],"sourceRoot":""}