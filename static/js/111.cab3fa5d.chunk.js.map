{"version":3,"file":"static/js/111.cab3fa5d.chunk.js","mappings":"+NAEMA,EAAaC,EAAAA,GAAAA,OAAH,onBA8BVC,EAAaD,EAAAA,GAAAA,OAAH,4Z,mMC7BVE,EAAOF,EAAAA,GAAAA,KAAH,iKASJG,EAAQH,EAAAA,GAAAA,MAAH,yHAOLI,EAAQJ,EAAAA,GAAAA,KAAH,oKAULK,EAAQL,EAAAA,GAAAA,MAAH,kjBA0BLM,GAASN,EAAAA,EAAAA,IAAOD,EAAAA,EAAPC,CAAH,qB,0HClDCO,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,UAAC,KAAD,CAAMC,SAhBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAETC,EAAQF,EAAKG,SAASD,MACtBE,EAAWJ,EAAKG,SAASC,SAEzBC,EAAO,CACXH,MAAOA,EAAMI,MACbF,SAAUA,EAASE,OAGrBX,GAASY,EAAAA,EAAAA,IAAMF,IACfL,EAAKQ,OACN,EAEC,WACE,UAAC,KAAD,YACE,SAAC,KAAD,qBACA,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,sBACZC,MAAM,8FACNC,UAAQ,QAGZ,UAAC,KAAD,YACE,SAAC,KAAD,wBACA,SAAC,KAAD,CACEJ,KAAK,WACLC,KAAK,WACLC,YAAY,yBACZC,MAAM,+CACNC,UAAQ,QAGZ,SAAC,KAAD,CAAQJ,KAAK,SAAb,sBAGL,E,UC1BD,EAdc,WACZ,OACE,6BACE,SAACK,EAAA,EAAD,CAAKF,MAAM,QAAQG,YAAY,mCAC/B,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,sCACA,SAACrB,EAAD,WAKT,C,uFChBM,SAASoB,EAAT,GAAsC,IAAvBF,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,YAC3B,OACE,UAAC,KAAD,YACE,2BAAQH,KACR,iBAAMF,KAAK,cAAcM,QAASD,MAGvC,C","sources":["components/base styles/Buttons.js","components/base styles/Form.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst TextButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 100px;\n  min-height: 30px;\n  padding: 8px 10px;\n\n  font-size: 10px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: rgb(42 42 42);\n\n  background-color: rgba(160, 141, 196, 0.5);\n  border-radius: 5px;\n  border: none;\n  box-shadow: 5px 5px 5px -2px rgba(75, 92, 165, 0.3);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: rgb(255 255 255);\n    background-color: rgba(9, 9, 121, 0.7);\n    border: none;\n    box-shadow: 1px -1px 10px -2px rgba(75, 92, 165, 0.3) inset;\n  }\n`;\n\nconst IconButton = styled.button`\n  display: inline-flex;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n\n  color: rgb(42 42 42);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: rgb(255 0 0);\n  }\n\n  & > svg {\n    fill: currentColor;\n  }\n`;\n\nexport { TextButton, IconButton };\n","import styled from 'styled-components';\nimport { TextButton } from './Buttons';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n\n  background-color: transparent;\n`;\n\nconst Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.span`\n  margin-bottom: 4px;\n\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  color: rgb(42 42 42);\n`;\n\nconst Input = styled.input`\n  width: calc(100vw - 40px);\n  padding: 10px 15px;\n\n  font-size: 12px;\n  font-weight: 500;\n  color: rgb(42 42 42);\n\n  background-color: rgb(255 255 255 / 70%);\n  border-radius: 5px;\n  border: 2px solid rgba(128, 128, 128, 0.7);\n  box-shadow: 3px 5px 10px -2px rgba(75, 92, 165, 0.5);\n\n  @media screen and (min-width: 320px) {\n    max-width: 300px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: 0;\n    border: 2px solid rgb(128, 128, 128);\n    box-shadow: 1px -1px 10px -2px rgba(75, 92, 165, 0.5) inset;\n  }\n`;\n\nconst Submit = styled(TextButton)``;\n\nexport { Form, Field, Label, Input, Submit };\n","import { useDispatch } from 'react-redux';\n// import { BiShow, BiHide } from 'react-icons/bi';\nimport { logIn } from 'redux/auth/operations';\nimport { Form, Field, Label, Input, Submit } from '../base styles/Form.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const email = form.elements.email;\n    const password = form.elements.password;\n\n    const user = {\n      email: email.value,\n      password: password.value,\n    };\n\n    dispatch(logIn(user));\n    form.reset();\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field>\n        <Label>Email</Label>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter your email...\"\n          title=\"Email must consist of your personal info,@ symbol and domain. Example, personal_info@domain\"\n          required\n        />\n      </Field>\n      <Field>\n        <Label>Password</Label>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter your password...\"\n          title=\"Password must consist of numbers and letters\"\n          required\n        />\n      </Field>\n      <Submit type=\"submit\">Log in</Submit>\n    </Form>\n  );\n};\n","import {\n  Container,\n  Section,\n  Title,\n} from 'components/base styles/CommonStyle.styled';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { SEO } from 'utils/SEO';\n\nconst Login = () => {\n  return (\n    <main>\n      <SEO title=\"Login\" description=\"You can login to your account\" />\n      <Container>\n        <Section>\n          <Title>Log in to your account</Title>\n          <LoginForm />\n        </Section>\n      </Container>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["TextButton","styled","IconButton","Form","Field","Label","Input","Submit","LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","email","elements","password","user","value","logIn","reset","type","name","placeholder","title","required","SEO","description","content"],"sourceRoot":""}