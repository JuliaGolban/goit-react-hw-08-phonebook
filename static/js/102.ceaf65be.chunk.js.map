{"version":3,"file":"static/js/102.ceaf65be.chunk.js","mappings":"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","sources":["components/base styles/Buttons.js","components/base styles/Form.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactModalEdit/ContactModalEdit.styled.js","components/ContactModalEdit/ContactFormEdit.jsx","components/ContactModalEdit/ContactModalEdit.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","redux/phonebook/selectors.js","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts.jsx","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst TextButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 100px;\n  min-height: 30px;\n  padding: 8px 10px;\n\n  font-size: 10px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: rgb(42 42 42);\n\n  background-color: rgba(160, 141, 196, 0.5);\n  border-radius: 5px;\n  border: none;\n  box-shadow: 5px 5px 5px -2px rgba(75, 92, 165, 0.3);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: rgb(255 255 255);\n    background-color: rgba(9, 9, 121, 0.7);\n    border: none;\n    box-shadow: 1px -1px 10px -2px rgba(75, 92, 165, 0.3) inset;\n  }\n`;\n\nconst IconButton = styled.button`\n  display: inline-flex;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n\n  color: rgb(42 42 42);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: rgb(255 0 0);\n  }\n\n  & > svg {\n    fill: currentColor;\n  }\n`;\n\nexport { TextButton, IconButton };\n","import styled from 'styled-components';\nimport { TextButton } from './Buttons';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n\n  background-color: transparent;\n`;\n\nconst Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.span`\n  margin-bottom: 4px;\n\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  color: rgb(42 42 42);\n`;\n\nconst Input = styled.input`\n  width: calc(100vw - 40px);\n  padding: 10px 15px;\n\n  font-size: 12px;\n  font-weight: 500;\n  color: rgb(42 42 42);\n\n  background-color: rgb(255 255 255 / 70%);\n  border-radius: 5px;\n  border: 2px solid rgba(128, 128, 128, 0.7);\n  box-shadow: 3px 5px 10px -2px rgba(75, 92, 165, 0.5);\n\n  @media screen and (min-width: 320px) {\n    max-width: 300px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: 0;\n    border: 2px solid rgb(128, 128, 128);\n    box-shadow: 1px -1px 10px -2px rgba(75, 92, 165, 0.5) inset;\n  }\n`;\n\nconst Submit = styled(TextButton)``;\n\nexport { Form, Field, Label, Input, Submit };\n","import toast from 'react-hot-toast';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/phonebook/operations';\nimport { Form, Field, Label, Input, Submit } from '../base styles/Form.styled';\n\nexport const ContactForm = () => {\n  const { data: contacts = [] } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const form = e.target;\n\n      const name = form.elements.name;\n      const number = form.elements.number;\n\n      const newContact = {\n        name: name.value,\n        number: number.value,\n      };\n\n      // check the new contact for an existing duplicate\n      const normalizedName = name.value.toLowerCase();\n      const isExist = contacts.some(\n        ({ name }) => name.toLowerCase() === normalizedName\n      );\n      if (isExist) {\n        return toast(t => (\n          <span>\n            <b>{name.value}</b> is already in contacts &nbsp;\n            <button\n              onClick={() => {\n                form.reset();\n                toast.dismiss(t.id);\n              }}\n            >\n              Reset\n            </button>\n          </span>\n        ));\n      }\n\n      // add the new contact to phonebook and reset form\n      await addContact(newContact).unwrap();\n      form.reset();\n    } catch (error) {\n      toast.error('Error adding the contact');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field>\n        <Label>Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name...\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Field>\n      <Field>\n        <Label>Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number...\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Field>\n      <Submit type=\"submit\" disabled={isLoading}>\n        Add contact\n      </Submit>\n    </Form>\n  );\n};\n","import { IconButton } from 'components/base styles/Buttons';\nimport styled from 'styled-components';\n\nconst Item = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: flex-end;\n  align-content: center;\n\n  color: rgb(42 42 42);\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nconst Name = styled.span`\n  margin-right: auto;\n  font-size: 14px;\n  font-weight: 500;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst Number = styled.span`\n  font-size: 12px;\n  font-weight: 400;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst IconBtn = styled(IconButton)``;\n\nexport { Item, Name, Number, IconBtn };\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: rgba(0, 0, 0, 0.3);\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  max-width: 350px;\n  width: 100%;\n  padding: 24px;\n\n  background-color: rgb(255 255 255);\n  border-radius: 3px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { toast } from 'react-hot-toast';\nimport { MdSave } from 'react-icons/md';\nimport { useUpdateContactMutation } from 'redux/phonebook/operations';\nimport { IconButton } from 'components/base styles/Buttons';\nimport { Form, Field, Label, Input } from '../base styles/Form.styled';\n\nexport const ContactEditorForm = ({ contact, onEdit }) => {\n  const { id, name, number } = contact;\n  const [updateContact, { isLoading: isUpdating }] = useUpdateContactMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const form = e.target;\n      const name = form.elements.name;\n      const number = form.elements.number;\n\n      const editedContact = {\n        name: name.value,\n        number: number.value,\n      };\n\n      await updateContact(id, editedContact).unwrap();\n      onEdit();\n      form.reset();\n    } catch (error) {\n      toast.error('Error editing the contact');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field>\n        <Label>Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder={name}\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Field>\n      <Field>\n        <Label>Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Field>\n      <IconButton type=\"submit\" disabled={isUpdating} aria-label=\"Edit contact\">\n        <MdSave size={15} />\n      </IconButton>\n    </Form>\n  );\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { MdClose } from 'react-icons/md';\nimport { IconButton } from 'components/base styles/Buttons';\nimport { Overlay, Modal } from './ContactModalEdit.styled';\nimport { ContactEditorForm } from './ContactFormEdit';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ContactModalEdit = ({ onClose, onSave, contact }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') onClose();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <Modal>\n        <IconButton\n          type=\"button\"\n          onClick={() => onClose()}\n          aria-label=\"Close modal\"\n        >\n          <MdClose size={15} />\n        </IconButton>\n        <ContactEditorForm contact={contact} onEdit={onSave} />\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdPerson, MdClose, MdEdit } from 'react-icons/md';\nimport { useDeleteContactMutation } from 'redux/phonebook/operations';\nimport { Item, Name, Number, IconBtn } from './ContactItem.styled';\nimport { ContactModalEdit } from 'components/ContactModalEdit/ContactModalEdit';\n\nexport const ContactItem = contact => {\n  const { id, name, number } = contact;\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  return (\n    <>\n      <Item key={id}>\n        <MdPerson size={15} />\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n        <IconBtn aria-label=\"Edit contact\" onClick={toggleModal}>\n          <MdEdit size={15} />\n        </IconBtn>\n        <IconBtn\n          aria-label=\"Delete contact\"\n          onClick={() => deleteContact(id).unwrap()}\n          disabled={isDeleting}\n        >\n          <MdClose size={15} />\n        </IconBtn>\n      </Item>\n      {isModalOpen && (\n        <ContactModalEdit\n          onClose={toggleModal}\n          onSave={toggleModal}\n          contact={contact}\n        />\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  width: calc(100vw - 40px);\n\n  @media screen and (min-width: 320px) {\n    max-width: 300px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 400px;\n  }\n`;\n\nconst Notify = styled.p`\n  margin-bottom: 15px;\n  font-weight: 500;\n`;\nexport { List, Notify };\n","import { useGetContactsQuery } from 'redux/phonebook/operations';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List, Notify } from './ContactsList.styled';\n\nexport const ContactList = () => {\n  const { data: contacts = [], isLoading, error } = useGetContactsQuery();\n\n  return (\n    <List>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n\n      {isLoading && !error && <Notify>Loading contacts...</Notify>}\n      {error && <Notify>{error}</Notify>}\n\n      {contacts.length === 0 && !error && !isLoading && (\n        <Notify>No contacts</Notify>\n      )}\n    </List>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { Field, Label, Input } from '../base styles/Form.styled';\n\nconst FieldFilter = styled(Field)``;\nconst LabelFilter = styled(Label)``;\nconst InputFilter = styled(Input)``;\n\nexport { FieldFilter, LabelFilter, InputFilter };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/phonebook/selectors';\nimport { filterContacts } from 'redux/phonebook/filterSlice';\nimport { FieldFilter, LabelFilter, InputFilter } from './ContactsFilter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = e => dispatch(filterContacts(e.target.value));\n\n  const filter = useSelector(selectFilter);\n  return (\n    <FieldFilter>\n      <LabelFilter>Find contacts by name</LabelFilter>\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        title=\"Name may contain only letters\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </FieldFilter>\n  );\n};\n","import { ContactForm } from '../components/ContactsForm/ContactsForm';\nimport { ContactList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/ContactsFilter/ContactsFilter';\nimport {\n  Container,\n  Section,\n  Title,\n} from '../components/base styles/CommonStyle.styled';\nimport { SEO } from 'utils/SEO';\n\nconst Contacts = () => {\n  return (\n    <main>\n      <SEO title=\"Contacts\" description=\"You can create your contacts list\" />\n      <Container>\n        <Section>\n          <Title as=\"h1\" hidden>\n            Phonebook\n          </Title>\n          <Title as=\"h2\">Create New contact</Title>\n          <ContactForm />\n        </Section>\n        <Section>\n          <Title as=\"h2\">Contacts</Title>\n          <Filter />\n          <ContactList />\n        </Section>\n      </Container>\n    </main>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["TextButton","styled","IconButton","Form","Field","Label","Input","Submit","ContactForm","useGetContactsQuery","data","contacts","useAddContactMutation","addContact","isLoading","handleSubmit","e","preventDefault","form","target","name","elements","number","newContact","value","normalizedName","toLowerCase","some","toast","t","onClick","reset","id","unwrap","onSubmit","type","placeholder","pattern","title","required","disabled","Item","Name","Number","IconBtn","Overlay","Modal","ContactEditorForm","contact","onEdit","useUpdateContactMutation","updateContact","isUpdating","editedContact","size","modalRoot","document","querySelector","ContactModalEdit","onClose","onSave","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","ContactItem","useDeleteContactMutation","deleteContact","isDeleting","useState","isModalOpen","setIsModalOpen","toggleModal","state","List","Notify","ContactList","error","length","map","selectFilter","filter","createSelector","items","includes","FieldFilter","LabelFilter","InputFilter","Filter","dispatch","useDispatch","useSelector","onChange","filterContacts","SEO","description","as","hidden","content"],"sourceRoot":""}